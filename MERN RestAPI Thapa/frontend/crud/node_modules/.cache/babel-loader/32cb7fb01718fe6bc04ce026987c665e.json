{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BATMAN\\\\Downloads\\\\MERN RestAPI Thapa\\\\frontend\\\\crud\\\\src\\\\Data.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Fetch from './Fetch';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Data() {\n  _s();\n\n  const [data, setdata] = useState([]);\n  useEffect(() => {\n    fetchdata();\n  }, []);\n\n  async function fetchdata() {\n    await Fetch.getdata().then(res => {\n      setdata(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data ? data.map(val => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid black\"\n      },\n      children: val.name\n    }, val._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Data, \"SAreMHoDBGGr3T3E7OOau+vtiuc=\");\n\n_c = Data;\nexport default Data;\n\nvar _c;\n\n$RefreshReg$(_c, \"Data\");","map":{"version":3,"names":["React","useState","useEffect","Fetch","axios","Data","data","setdata","fetchdata","getdata","then","res","catch","err","console","log","map","val","border","name","_id"],"sources":["C:/Users/BATMAN/Downloads/MERN RestAPI Thapa/frontend/crud/src/Data.js"],"sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport Fetch from './Fetch'\r\nimport axios from 'axios';\r\n\r\nfunction Data() {\r\n\r\n\r\nconst [data,setdata]=useState([])\r\n\r\n\r\nuseEffect(()=>{\r\n    fetchdata()\r\n},[])\r\n\r\n\r\nasync function fetchdata()\r\n{\r\n    await Fetch.getdata().then(res=>{\r\n        setdata(res)\r\n    })\r\n    .catch((err)=>{console.log(err)})\r\n}\r\n\r\n  return (\r\n    <div>\r\n        {data?data.map(val=>(\r\n            <div key={val._id} style={{border:\"1px solid black\"}}>\r\n                {val.name}\r\n            </div>\r\n        )):<></>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,IAAT,GAAgB;EAAA;;EAGhB,MAAM,CAACC,IAAD,EAAMC,OAAN,IAAeN,QAAQ,CAAC,EAAD,CAA7B;EAGAC,SAAS,CAAC,MAAI;IACVM,SAAS;EACZ,CAFQ,EAEP,EAFO,CAAT;;EAKA,eAAeA,SAAf,GACA;IACI,MAAML,KAAK,CAACM,OAAN,GAAgBC,IAAhB,CAAqBC,GAAG,IAAE;MAC5BJ,OAAO,CAACI,GAAD,CAAP;IACH,CAFK,EAGLC,KAHK,CAGEC,GAAD,IAAO;MAACC,OAAO,CAACC,GAAR,CAAYF,GAAZ;IAAiB,CAH1B,CAAN;EAIH;;EAEC,oBACE;IAAA,UACKP,IAAI,GAACA,IAAI,CAACU,GAAL,CAASC,GAAG,iBACd;MAAmB,KAAK,EAAE;QAACC,MAAM,EAAC;MAAR,CAA1B;MAAA,UACKD,GAAG,CAACE;IADT,GAAUF,GAAG,CAACG,GAAd;MAAA;MAAA;MAAA;IAAA,QADE,CAAD,gBAIF;EALP;IAAA;IAAA;IAAA;EAAA,QADF;AASD;;GA5BQf,I;;KAAAA,I;AA8BT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}